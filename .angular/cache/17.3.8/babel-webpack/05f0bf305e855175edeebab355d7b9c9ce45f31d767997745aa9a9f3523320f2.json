{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"@angular/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst common_1 = require(\"@angular/common\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, platformId) {\n      this.http = http;\n      this.platformId = platformId;\n      this.isBrowser = (0, common_1.isPlatformBrowser)(this.platformId);\n      this.baseUrl = this.isBrowser ? '' : 'http://localhost:4000';\n      const initialToken = this.isBrowser ? localStorage.getItem('token') : null;\n      this.tokenSubject = new rxjs_1.BehaviorSubject(initialToken);\n    }\n    register(username, email, password) {\n      return this.http.post(`${this.baseUrl}/api/users/register`, {\n        username,\n        email,\n        password\n      });\n    }\n    login(email, password) {\n      return this.http.post(`${this.baseUrl}/api/users/login`, {\n        email,\n        password\n      }).pipe((0, operators_1.tap)(response => {\n        this.setToken(response.token);\n      }));\n    }\n    getProfile() {\n      return this.http.get(`${this.baseUrl}/api/users/profile`, {\n        headers: {\n          Authorization: `Bearer ${this.tokenSubject.value}`\n        }\n      });\n    }\n    logout() {\n      this.setToken(null);\n    }\n    isAuthenticated() {\n      return !!this.tokenSubject.value;\n    }\n    addToFavorites(tvShowId) {\n      return this.http.post(`${this.baseUrl}/api/users/favorites`, {\n        tvShowId\n      }, {\n        headers: {\n          Authorization: `Bearer ${this.tokenSubject.value}`\n        }\n      });\n    }\n    getFavorites() {\n      return this.http.get(`${this.baseUrl}/api/users/favorites`, {\n        headers: {\n          Authorization: `Bearer ${this.tokenSubject.value}`\n        }\n      });\n    }\n    setToken(token) {\n      this.tokenSubject.next(token);\n      if (this.isBrowser) {\n        if (token) {\n          localStorage.setItem('token', token);\n        } else {\n          localStorage.removeItem('token');\n        }\n      }\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(core_1.PLATFORM_ID));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();\nexports.AuthService = AuthService;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}